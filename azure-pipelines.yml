# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

# Command line
# Run a command line script using Bash on Linux and macOS and cmd.exe on Windows


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'



steps:

# Command line
# Run a command line script using Bash on Linux and macOS and cmd.exe on Windows

- task: CmdLine@2
  inputs:
    script: 'mkdir d:\a\1\MobEAD' 
    #workingDirectory: # Optional
    #failOnStderr: false # Optional

- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'


#- task: SonarQubePrepare@4
#  inputs:
#    SonarQube: 'Sonarqube Osanam Azure'
#    scannerMode: 'CLI'
#    configMode: 'manual'
#    cliProjectKey: 'Unyleya_-_DevOps_Unyleya_-_DevOps'
#    cliProjectName: 'Unyleya - DevOps'
#    cliSources: '$(System.DefaultWorkingDirectory)'
#
#- powershell: |
#    $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w/,-.]*"\,?'
#    Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

#- task: SonarQubeAnalyze@4

#- task: SonarQubePublish@4
#  inputs:
#    pollingTimeoutSec: '300'

- task: PublishPipelineArtifact@1
  inputs:
       artifactName: # 'drop'

 

